/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AVL_Expt;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.time.Duration;
import java.time.Instant;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author sushma r iliger
 */
public class AVL_Swing extends javax.swing.JFrame {

    private FileReader file;    
    public AVLTree avlt = new AVLTree();
    public static boolean insertionFlag=false,nodeFoundFlag=false;
    private static JSONArray jsonObjectHolder=new JSONArray();

    public AVL_Swing() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bt_BrowseFile = new javax.swing.JButton();
        bt_SaveChanges = new javax.swing.JButton();
        bt_Search = new javax.swing.JPanel();
        bt_Insert = new javax.swing.JButton();
        bt_search = new javax.swing.JButton();
        bt_Update = new javax.swing.JButton();
        bt_Delete = new javax.swing.JButton();
        bt_ResetFields = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tf_SSN = new javax.swing.JTextField();
        tf_Name = new javax.swing.JTextField();
        tf_Dept = new javax.swing.JTextField();
        tf_Salary = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        cb_Traversal = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_Display = new javax.swing.JTextArea();
        bt_Display = new javax.swing.JButton();
        lb_FilePath = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bt_BrowseFile.setText("Browse");
        bt_BrowseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_BrowseFileActionPerformed(evt);
            }
        });

        bt_SaveChanges.setText("Save Changes");
        bt_SaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_SaveChangesActionPerformed(evt);
            }
        });

        bt_Search.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Emloyee Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        bt_Insert.setText("Insert");
        bt_Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_InsertActionPerformed(evt);
            }
        });

        bt_search.setText("Search");
        bt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_searchActionPerformed(evt);
            }
        });

        bt_Update.setText("Update");
        bt_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_UpdateActionPerformed(evt);
            }
        });

        bt_Delete.setText("Delete");
        bt_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_DeleteActionPerformed(evt);
            }
        });

        bt_ResetFields.setText("Reset Field");
        bt_ResetFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ResetFieldsActionPerformed(evt);
            }
        });

        jLabel1.setText("SSN:");

        jLabel2.setText("Name:");

        jLabel3.setText("Department:");

        jLabel4.setText("Salary:");

        javax.swing.GroupLayout bt_SearchLayout = new javax.swing.GroupLayout(bt_Search);
        bt_Search.setLayout(bt_SearchLayout);
        bt_SearchLayout.setHorizontalGroup(
            bt_SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bt_SearchLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(bt_SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_Insert)
                    .addGroup(bt_SearchLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tf_SSN, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(bt_SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(bt_SearchLayout.createSequentialGroup()
                        .addComponent(bt_search)
                        .addGap(36, 36, 36)
                        .addComponent(bt_Update)
                        .addGap(36, 36, 36)
                        .addComponent(bt_Delete)
                        .addGap(35, 35, 35))
                    .addGroup(bt_SearchLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tf_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_Dept, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(bt_SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_ResetFields)
                    .addGroup(bt_SearchLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tf_Salary, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        bt_SearchLayout.setVerticalGroup(
            bt_SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bt_SearchLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(bt_SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(tf_SSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_Dept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_Salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(bt_SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Insert)
                    .addComponent(bt_search)
                    .addComponent(bt_Update)
                    .addComponent(bt_Delete)
                    .addComponent(bt_ResetFields))
                .addGap(22, 22, 22))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Display", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        cb_Traversal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Preorder", "Inorder", "Postorder" }));

        ta_Display.setColumns(20);
        ta_Display.setRows(5);
        jScrollPane1.setViewportView(ta_Display);

        bt_Display.setText("Display");
        bt_Display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_DisplayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bt_Display)
                        .addGap(18, 18, 18)
                        .addComponent(cb_Traversal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_Traversal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_Display))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lb_FilePath.setText(".........");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("AVL  TREE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(bt_BrowseFile)
                .addGap(18, 18, 18)
                .addComponent(lb_FilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(198, 198, 198)
                .addComponent(bt_SaveChanges)
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bt_Search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(271, 271, 271))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_BrowseFile)
                    .addComponent(bt_SaveChanges)
                    .addComponent(lb_FilePath))
                .addGap(29, 29, 29)
                .addComponent(bt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void readJsonFile(FileReader file){
        try{
            JSONParser jsonParser = new JSONParser();
            Object obj = jsonParser.parse(file);
            JSONObject jsonObject = (JSONObject) obj;
            JSONArray jsonArray = new JSONArray();
            Object obj1=jsonObject.get("Employee");
            jsonArray= (JSONArray)obj1;
            Instant start = Instant.now();        
        
            for(int i=0;i<jsonArray.size();i++){                
                String response = jsonArray.get(i).toString();
                
                org.json.JSONObject fullEmployeeDeatils= new org.json.JSONObject(response);
                org.json.JSONObject empDetails= new org.json.JSONObject();
                empDetails = fullEmployeeDeatils.getJSONObject("empDetails");
                int socialSecurityNumber= Integer.parseInt(fullEmployeeDeatils.get("socialSecurityNumber").toString());
                AVLNode newnode=new AVLNode(socialSecurityNumber,empDetails.toString());                
                avlt.insert(newnode);
            }
            Instant end = Instant.now();                             
            Duration timeElapsed = Duration.between(start, end);              
            System.out.println("Time taken to create the AVL tree: "+timeElapsed.toNanos());            
            file.close();
        }catch(Exception e){}   
    }
    
    public AVLNode search(int ssn){        
        AVLNode nodeFound=new AVLNode();       
        Instant start = Instant.now();        
        nodeFound=avlt.search(avlt.getRoot(), ssn);
        Instant end = Instant.now();                             
        Duration timeElapsed = Duration.between(start, end);  
        if(nodeFound!=null){                    
            tf_SSN.setText(""+nodeFound.getSocialSecurityNumber());            
            JOptionPane.showMessageDialog(rootPane,"Node found and time taken:"+timeElapsed.toNanos()+"ns");
            String nodedData=nodeFound.getEmloyeeDetails();            
            try {                     
                JSONParser parser = new JSONParser();  
                JSONObject json = (JSONObject) parser.parse(nodedData);
                tf_Dept.setText(json.get("department").toString());
                tf_Name.setText(json.get("name").toString());
                tf_Salary.setText(json.get("salary").toString());
            } catch (Exception ex) {                }         
            return nodeFound;
        }
        else{
            reset();
            JOptionPane.showMessageDialog(rootPane,"Node not found and time taken:"+timeElapsed.toNanos()+"ns");
            return null;
        }
    }
    
    
public void preorderTraverse(AVLNode currentParent){          
        if(currentParent!=null){             
            String nodedata="\n"+currentParent.getSocialSecurityNumber()+"->"+currentParent.getEmloyeeDetails();           
            ta_Display.append(nodedata);             
            preorderTraverse(currentParent.getLeftChild());            
            preorderTraverse(currentParent.getRightChild());
            
        }            
    }
    
    public  void inorderTraverse(AVLNode currentParent){                                 
        if(currentParent!=null){ 
            inorderTraverse(currentParent.getLeftChild());            
            String nodedata="\n"+currentParent.getSocialSecurityNumber()+"->"+currentParent.getEmloyeeDetails();            
            ta_Display.append(nodedata);                       
            inorderTraverse(currentParent.getRightChild());
        }            
    }
    
    public  void postorderTraverse(AVLNode currentParent){                          
        if(currentParent!=null){ 
            postorderTraverse(currentParent.getLeftChild());                        
            postorderTraverse(currentParent.getRightChild());            
            String nodedata="\n"+currentParent.getSocialSecurityNumber()+"->"+currentParent.getEmloyeeDetails();            
            ta_Display.append(nodedata);                        
        }            
    }
    
    
        public  void storeJson(AVLNode currentParent){                          
        //Root, Left, Right
        if(currentParent!=null){                         
            JSONObject newdata=new JSONObject();
            JSONObject empDetails=new JSONObject();            
            
            try {                     
                JSONParser parser = new JSONParser();  
                JSONObject json= (JSONObject) parser.parse(currentParent.getEmloyeeDetails());                
                empDetails.put("name",json.get("name").toString());
                empDetails.put("department",json.get("department").toString());
                empDetails.put("salary",json.get("salary").toString());            
            } catch (Exception ex) {
                Logger.getLogger(AVL_Swing.class.getName()).log(Level.SEVERE, null, ex);
            }                       
            
            newdata.put("socialSecurityNumber",currentParent.getSocialSecurityNumber());
            newdata.put("empDetails",empDetails);            
            jsonObjectHolder.add(newdata);
            storeJson(currentParent.getLeftChild());            
            storeJson(currentParent.getRightChild());
        }            
    }
    public void writeJsonFile(){
        try{             
            JFileChooser j = new JFileChooser();
            int r=j.showOpenDialog(null);                                                             
            try {            
                if (r == JFileChooser.APPROVE_OPTION)
            {
                FileWriter fileWriter = new FileWriter(j.getSelectedFile().getAbsolutePath());                                           
                readJsonFile(this.file);
                JSONObject jsonObjectMain=new JSONObject();
                jsonObjectMain.put("Employee",jsonObjectHolder);
                fileWriter.write(jsonObjectMain.toJSONString());                        
                fileWriter.close();            
            }                        
            }catch(Exception e){}                             
            
           
        }catch(Exception e){}              
    }
    public void reset(){
            tf_SSN.setText("");
            tf_Dept.setText("");
            tf_Name.setText("");
            tf_Salary.setText("");                               
    }  
    
    private void bt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_searchActionPerformed
       int ssn=Integer.parseInt(tf_SSN.getText());
        search(ssn);
    }//GEN-LAST:event_bt_searchActionPerformed
    
    private void bt_BrowseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_BrowseFileActionPerformed
        try {
            this.file= new FileReader("C:\\Users\\sushma r iliger\\Desktop\\ME ITE Folder\\ADS Expt\\Expt2 Avl\\file.json");                           
            lb_FilePath.setText(this.file.toString());                 
            readJsonFile(this.file);
        } catch(FileNotFoundException ex){}
           
//        JFileChooser j = new JFileChooser();
//          int r=j.showOpenDialog(null);                                                             
//            try {            
//                if (r == JFileChooser.APPROVE_OPTION)
//            {
//                this.file= new FileReader(j.getSelectedFile().getAbsolutePath());
//                lb_FilePath.setText(j.getSelectedFile().getAbsolutePath());                 
//                readJsonFile(this.file);                
//            }             
//            else
//            {
//                lb_FilePath.setText("The user cancelled the operation"); 
//            } 
//            }catch(Exception e){}              

    }//GEN-LAST:event_bt_BrowseFileActionPerformed

    private void bt_DisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_DisplayActionPerformed
        String choice = cb_Traversal.getSelectedItem().toString();
        switch(choice){
            case "Preorder":
                System.out.println("Preorder");
                ta_Display.setText("");           
                preorderTraverse(avlt.getRoot());
                break;
            case "Inorder":
                System.out.println("Inorder");
                ta_Display.setText("");           
                inorderTraverse(avlt.getRoot());
                break;
            case "Postorder":
                System.out.println("Postorder");
                ta_Display.setText("");                      
                postorderTraverse(avlt.getRoot());
                break;            
        }
    }//GEN-LAST:event_bt_DisplayActionPerformed

    private void bt_InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_InsertActionPerformed
                if(tf_Name.getText().equals("")|| tf_Dept.getText().equals("")|| tf_Salary.getText().equals("")|| tf_SSN.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Fill all the fields");
        }
        else
        {   Instant start = Instant.now();
            JSONObject empDetails=new JSONObject();
            empDetails.put("name", tf_Name.getText());
            empDetails.put("department",tf_Dept.getText());
            empDetails.put("salary",tf_Salary.getText());            
            int ssn=Integer.parseInt(tf_SSN.getText());
            AVLNode newnode= new AVLNode(ssn,empDetails.toString());
            avlt.insert(newnode);            
            Instant end = Instant.now();
            Duration timeElapsed = Duration.between(start, end);             
            if(insertionFlag){             
               JOptionPane.showMessageDialog(rootPane, "Insertion successful and time take :"+timeElapsed.toNanos()+"ns");               
               reset();
               insertionFlag=false;
            }
            else if(!insertionFlag){                
                 JOptionPane.showMessageDialog(rootPane, "Insertion failed and time take :"+timeElapsed.toNanos()+"ns");
            }
        }        
    }//GEN-LAST:event_bt_InsertActionPerformed

    private void bt_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_UpdateActionPerformed
       if(tf_Name.getText().equals("")|| tf_Dept.getText().equals("")|| 
                tf_Salary.getText().equals("")|| tf_SSN.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Fill all the fields");
        }
        else
        {
            int ssn=Integer.parseInt(tf_SSN.getText());
            AVLNode currentNode =new AVLNode();
            currentNode=avlt.search(avlt.getRoot(),ssn);
            
            if(currentNode!=null){
            JSONObject empDetails=new JSONObject();
            empDetails.put("name", tf_Name.getText());
            empDetails.put("department",tf_Dept.getText());
            empDetails.put("salary",tf_Salary.getText());            
 
            currentNode.setEmployeeDetails(empDetails.toString());
               
               JOptionPane.showMessageDialog(rootPane, "Update successfull"); 
               nodeFoundFlag=false;
            }
            else if(!nodeFoundFlag){
               JOptionPane.showMessageDialog(rootPane, "Updation failed");            
            }
        }    
    }//GEN-LAST:event_bt_UpdateActionPerformed

    private void bt_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_DeleteActionPerformed
       int id=Integer.parseInt(tf_SSN.getText());   
       AVLNode node=new AVLNode();
       node=search(id);
        long ns=avlt.delete(node);
       JOptionPane.showMessageDialog(rootPane, "Deletion successfulland time take :"+ns+"ns");
    }//GEN-LAST:event_bt_DeleteActionPerformed
  
    private void bt_SaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_SaveChangesActionPerformed
        jsonObjectHolder.clear();
        storeJson(avlt.getRoot());
        writeJsonFile();
    }//GEN-LAST:event_bt_SaveChangesActionPerformed

    private void bt_ResetFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ResetFieldsActionPerformed
        reset();
    }//GEN-LAST:event_bt_ResetFieldsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AVL_Swing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AVL_Swing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AVL_Swing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AVL_Swing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AVL_Swing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_BrowseFile;
    private javax.swing.JButton bt_Delete;
    private javax.swing.JButton bt_Display;
    private javax.swing.JButton bt_Insert;
    private javax.swing.JButton bt_ResetFields;
    private javax.swing.JButton bt_SaveChanges;
    private javax.swing.JPanel bt_Search;
    private javax.swing.JButton bt_Update;
    private javax.swing.JButton bt_search;
    private javax.swing.JComboBox cb_Traversal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_FilePath;
    private javax.swing.JTextArea ta_Display;
    private javax.swing.JTextField tf_Dept;
    private javax.swing.JTextField tf_Name;
    private javax.swing.JTextField tf_SSN;
    private javax.swing.JTextField tf_Salary;
    // End of variables declaration//GEN-END:variables
}
